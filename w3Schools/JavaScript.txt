"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.concat(<i>array</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.concat(<i>array</i>)</div>         <div id=""back""><div><b>Array method</b>&nbsp;that joins two or more arrays. It returns a new array, containing the joined arrays.</div></div>         <div id=""additional-info""></div>         <div id=""options""><i>array</i>.concat(<i>array</i>, ...<i>arrayN</i>)</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><b>Array method</b>&nbsp;that joins two or more arrays. It returns a new array, containing the joined arrays.</div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><b>Array method</b>&nbsp;that joins two or more arrays. It returns a new array, containing the joined arrays.</div></div>         <div id=""back""><i>array</i>.concat(<i>array</i>)</div>         <div id=""additional-info""></div>         <div id=""options""><i>array</i>.concat(<i>array</i>, ...<i>arrayN</i>)</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.copyWithin(<i>target</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.copyWithin(<i>target</i>)</div>         <div id=""back""><b>Array method</b> that copies array elements within the array, to and from specified positions.</div>         <div id=""additional-info"">Modifies original array in place.</div>         <div id=""options""><i>array</i>.copyWithin(<i>target</i>, <i>start=0</i>, <i>end=array.length</i>)</div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method</b> that copies array elements within the array, to and from specified positions.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method</b> that copies array elements within the array, to and from specified positions.</div>         <div id=""back""><i>array</i>.copyWithin(<i>target</i>)</div>         <div id=""additional-info"">Modifies original array in place.</div>         <div id=""options""><i>array</i>.copyWithin(<i>target</i>, <i>start=0</i>, <i>end=array.length</i>)</div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.entries()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.entries()</div>         <div id=""back""><b>&nbsp;Array method </b>that returns an Array Iterator object with key/value pairs.</div>         <div id=""additional-info"">The entries() method does not change the original array.</div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;fruits = [<span style=""color: brown;"">""Banana""</span>,&nbsp;<span style=""color: brown;"">""Orange""</span>,&nbsp;<span style=""color: brown;"">""Apple""</span>,&nbsp;<span style=""color: brown;"">""Mango""</span>];<br><span style=""color: mediumblue;"">const</span>&nbsp;f = fruits.entries(); <br><font color=""#555753"">//f = [[0,&nbsp;""Banana""], [1,&nbsp;""Orange""], [2,&nbsp;""Apple""], [3,&nbsp;""Mango""]];<br></font></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>&nbsp;Array method </b>that returns an Array Iterator object with key/value pairs.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>&nbsp;Array method </b>that returns an Array Iterator object with key/value pairs.</div>         <div id=""back""><i>array</i>.entries()</div>         <div id=""additional-info"">The entries() method does not change the original array.</div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;fruits = [<span style=""color: brown;"">""Banana""</span>,&nbsp;<span style=""color: brown;"">""Orange""</span>,&nbsp;<span style=""color: brown;"">""Apple""</span>,&nbsp;<span style=""color: brown;"">""Mango""</span>];<br><span style=""color: mediumblue;"">const</span>&nbsp;f = fruits.entries(); <br><font color=""#555753"">//f = [[0,&nbsp;""Banana""], [1,&nbsp;""Orange""], [2,&nbsp;""Apple""], [3,&nbsp;""Mango""]];<br></font></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.every(<i>func</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.every(<i>func</i>)</div>         <div id=""back""><b>Array method </b>that returns true if every element in the array returns true for the given function.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;ages = [<span style=""color: red;"">32</span>,&nbsp;<span style=""color: red;"">33</span>,&nbsp;<span style=""color: red;"">16</span>,&nbsp;<span style=""color: red;"">40</span>];<br><br>ages.every(checkAge)<br><span style=""color: red;""></span><br><span style=""color: mediumblue;"">function</span>&nbsp;checkAge(age) {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;age &gt;&nbsp;<span style=""color: red;"">18</span>;<br>}</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method </b>that returns true if every element in the array returns true for the given function.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method </b>that returns true if every element in the array returns true for the given function.</div>         <div id=""back""><i>array</i>.every(<i>func</i>)</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;ages = [<span style=""color: red;"">32</span>,&nbsp;<span style=""color: red;"">33</span>,&nbsp;<span style=""color: red;"">16</span>,&nbsp;<span style=""color: red;"">40</span>];<br><br>ages.every(checkAge)<br><span style=""color: red;""></span><br><span style=""color: mediumblue;"">function</span>&nbsp;checkAge(age) {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;age &gt;&nbsp;<span style=""color: red;"">18</span>;<br>}</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><div><i>array</i>.fill(<i>value</i>)</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><div><i>array</i>.fill(<i>value</i>)</div></div></div>         <div id=""back""><b>Array method&nbsp;</b>that fills specified elements in an array with a value.</div>         <div id=""additional-info""><div>Start and end position can be specified. If not, all elements will be filled.</div></div>         <div id=""options""><div><div><i>array</i>.fill(<em>value, start, end</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;fruits = [<span style=""color: brown;"">""Banana""</span>,&nbsp;<span style=""color: brown;"">""Orange""</span>,&nbsp;<span style=""color: brown;"">""Apple""</span>,&nbsp;<span style=""color: brown;"">""Mango""</span>];<br>fruits.fill(<span style=""color: brown;"">""Kiwi""</span>,&nbsp;<span style=""color: red;"">2</span>,&nbsp;<span style=""color: red;"">4</span>); <font color=""#555753"">// [ Banana, Orange, Kiwi, Kiwi ]</font></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method&nbsp;</b>that fills specified elements in an array with a value.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><b>Array method&nbsp;</b>that fills specified elements in an array with a value.</div>         <div id=""back""><div><div><i>array</i>.fill(<i>value</i>)</div></div></div>         <div id=""additional-info""><div>Start and end position can be specified. If not, all elements will be filled.</div></div>         <div id=""options""><div><div><i>array</i>.fill(<em>value, start, end</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;fruits = [<span style=""color: brown;"">""Banana""</span>,&nbsp;<span style=""color: brown;"">""Orange""</span>,&nbsp;<span style=""color: brown;"">""Apple""</span>,&nbsp;<span style=""color: brown;"">""Mango""</span>];<br>fruits.fill(<span style=""color: brown;"">""Kiwi""</span>,&nbsp;<span style=""color: red;"">2</span>,&nbsp;<span style=""color: red;"">4</span>); <font color=""#555753"">// [ Banana, Orange, Kiwi, Kiwi ]</font></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.filter(<em>function(currentValue</em>))</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><i>array</i>.filter(<em>function(currentValue</em>))</div>         <div id=""back""><div><b>Array method</b> that creates a new array filled with elements that pass a test provided by a function, and returnes a new array.</div></div>         <div id=""additional-info"">Doesn't edit the current array.</div>         <div id=""options""><div><div><i>array</i>.filter(<em>function(currentValue, index, arr), thisValue=undefined</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;ages = [<span style=""color: red;"">32</span>,&nbsp;<span style=""color: red;"">33</span>,&nbsp;<span style=""color: red;"">16</span>,&nbsp;<span style=""color: red;"">40</span>];<br><span style=""color: mediumblue;"">const</span>&nbsp;result = ages.filter(checkAdult);<br><span style=""color: red;""></span><br><span style=""color: mediumblue;"">function</span>&nbsp;checkAdult(age) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;age &gt;=&nbsp;<span style=""color: red;"">18</span>;<br>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><b>Array method</b> that creates a new array filled with elements that pass a test provided by a function, and returnes a new array.</div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Array</div>         <div id=""front""><div><b>Array method</b> that creates a new array filled with elements that pass a test provided by a function, and returnes a new array.</div></div>         <div id=""back""><i>array</i>.filter(<em>function(currentValue</em>))</div>         <div id=""additional-info"">Doesn't edit the current array.</div>         <div id=""options""><div><div><i>array</i>.filter(<em>function(currentValue, index, arr), thisValue=undefined</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;ages = [<span style=""color: red;"">32</span>,&nbsp;<span style=""color: red;"">33</span>,&nbsp;<span style=""color: red;"">16</span>,&nbsp;<span style=""color: red;"">40</span>];<br><span style=""color: mediumblue;"">const</span>&nbsp;result = ages.filter(checkAdult);<br><span style=""color: red;""></span><br><span style=""color: mediumblue;"">function</span>&nbsp;checkAdult(age) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;age &gt;=&nbsp;<span style=""color: red;"">18</span>;<br>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><i>boolean</i>.toString()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><i>boolean</i>.toString()</div>         <div id=""back""><b>Boolean method </b>that converts a boolean value to a string, and returns the result.</div>         <div id=""additional-info"">Every JavaScript object has a toString() method.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><i>boolean</i>.valueOf()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><i>boolean</i>.valueOf()</div>         <div id=""back""><b>Boolean method </b>that returns the primitive value of a boolean.</div>         <div id=""additional-info"">Usually called by JavaScript behind the scenes, and not explicitly in code.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean method </b>that converts a boolean value to a string, and returns the result.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean method </b>that converts a boolean value to a string, and returns the result.</div>         <div id=""back""><i>boolean</i>.toString()</div>         <div id=""additional-info"">Every JavaScript object has a toString() method.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean method </b>that returns the primitive value of a boolean.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean method </b>that returns the primitive value of a boolean.</div>         <div id=""back""><i>boolean</i>.valueOf()</div>         <div id=""additional-info"">Usually called by JavaScript behind the scenes, and not explicitly in code.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
" <div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><div><div><i>boolean</i>.constructor</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "")         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><div><div><i>boolean</i>.constructor</div></div></div>         <div id=""back""><b>Boolean&nbsp;property</b>&nbsp;that returns the function that created the Boolean prototype.</div>         <div id=""additional-info"">For JavaScript booleans the constructor property returns: function Boolean() { [native code] }</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || "">= 3.7""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front"">Boolean.prototype</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front"">Boolean.prototype</div>         <div id=""back""><b>Boolean property&nbsp;</b>that allows you to add new properties and methods to booleans.</div>         <div id=""additional-info"">Prototype is a property available with all JavaScript objects. <br>You are not advised to change the prototype of an object that you do not control.</div>         <div id=""options"">Boolean.prototype.<i>name&nbsp;</i>=&nbsp;<i>value</i></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean property&nbsp;</b>that allows you to add new properties and methods to booleans.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean property&nbsp;</b>that allows you to add new properties and methods to booleans.</div>         <div id=""back"">Boolean.prototype</div>         <div id=""additional-info"">Prototype is a property available with all JavaScript objects. <br>You are not advised to change the prototype of an object that you do not control.</div>         <div id=""options"">Boolean.prototype.<i>name&nbsp;</i>=&nbsp;<i>value</i></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean&nbsp;property</b>&nbsp;that returns the function that created the Boolean prototype.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front""><b>Boolean&nbsp;property</b>&nbsp;that returns the function that created the Boolean prototype.</div>         <div id=""back""><div><div><i>boolean</i>.constructor</div></div></div>         <div id=""additional-info"">For JavaScript booleans the constructor property returns: function Boolean() { [native code] }</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "")         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || "">= 3.7""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front"">                 Do booleans capitilize there first letter in JavaScript.         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Boolean</div>         <div id=""front"">                 Do booleans capitilize there first letter in JavaScript.         </div>         <div id=""back-basic"">                 Yes         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b> break</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b> break</div>         <div id=""back""><b>Statement</b> that exits a switch or a loop.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><font color=""#555753"">// example 1: loop<br></font><font color=""#0000cd"">let</font>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt;&nbsp;<span style=""color: red;"">5</span>; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br><span style=""color: mediumblue;""><br></span><span style=""color: rgb(85, 87, 83);"">// example 2: switch/case</span><br style=""color: rgb(85, 87, 83);""><span style=""color: mediumblue;"">let</span>&nbsp;day;<br><span style=""color: mediumblue;"">switch</span>&nbsp;(<span style=""color: mediumblue;"">new</span>&nbsp;Date().getDay()) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">0</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Sunday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">1</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Monday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">2</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Tuesday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">3</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Wednesday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;class</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;class</div>         <div id=""back""><b>Statement</b>&nbsp;that declares a class.</div>         <div id=""additional-info""><div><div>Unlike functions, class declarations are not hoisted (you must declare a class before you can use it).</div></div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// Create a Car class<br></span><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br><span style=""color: red;""></span>constructor(brand) {<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;= brand;<br><span style=""color: red;""></span>&nbsp; }<br><span style=""color: red;""></span>}<br><span style=""color: red;""></span><br><span style=""color: red;""></span><span style=""color: green;"">// Create a Car Object<br></span>myCar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;const</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;const</div>         <div id=""back""><b>Statement</b>&nbsp;that declares a variable with a constant value.</div>         <div id=""additional-info"">Constant values can not be reassigned (although values, properties and other attributes may be altered).</div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;car = {type:<span style=""color: brown;"">""Fiat""</span>, model:<span style=""color: brown;"">""500""</span>, color:<span style=""color: brown;"">""white""</span>};<br><font color=""#555753"">// car = 33; would throw an error<br></font><span style=""color: rgb(85, 87, 83);"">// car.type = 33; would change the type to 33 with no errors</span><br style=""color: rgb(85, 87, 83);""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;continue</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;continue</div>         <div id=""back""><b>Statement</b>&nbsp;that&nbsp;breaks one iteration (in the loop) if a specified condition occurs, and continues with the next iteration in the loop.</div>         <div id=""additional-info"">The difference between continue and the break statement, is instead of ""jumping out"" of a loop, the continue statement ""jumps over"" one iteration in the loop.</div>         <div id=""options""><div><div>continue<i>&nbsp;labelname;</i></div></div></div>         <div id=""example""><font color=""#555753"">// example 1<br></font><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt;&nbsp;<span style=""color: red;"">5</span>; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">continue</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br><br><span style=""color: rgb(85, 87, 83);"">// example 2<br></span><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>;<br><span style=""color: mediumblue;"">while</span>&nbsp;(i &lt;&nbsp;<span style=""color: red;"">5</span>) {<br><span style=""color: red;""></span>&nbsp; i++;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">continue</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br style=""color: rgb(85, 87, 83);""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;debugger</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;debugger</div>         <div id=""back""><b>Statement</b>&nbsp;that stops the execution of JavaScript, and calls (if available) the debugging function.</div>         <div id=""additional-info""><div>If no debugging is available, the debugger statement has no effect.</div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;x =&nbsp;<span style=""color: red;"">15</span>&nbsp;*&nbsp;<span style=""color: red;"">5</span>;<br><span style=""color: mediumblue;"">debugger</span>;<br><font color=""#555753"">// everything after this line will only show up when the debugger is off</font></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;do ... while</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;do ... while</div>         <div id=""back""><b>Statement</b>&nbsp;that executes a block of statements and repeats the block while a condition is true (executes at least once).</div>         <div id=""additional-info"">The do...while is used when you want to run a code block at least one time. </div>         <div id=""options""><span style=""color: mediumblue;"">do</span>&nbsp;{<br><span style=""color: red;""></span><i>&nbsp; code block to be executed<br></i>}<br><span style=""color: mediumblue;"">while</span>&nbsp;(<em>condition</em>);</div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>;<br><span style=""color: mediumblue;"">do</span>&nbsp;{<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>&nbsp; i++;<br><span style=""color: red;""></span>}<br><span style=""color: mediumblue;"">while</span>&nbsp;(i &lt;&nbsp;<span style=""color: red;"">5</span>);</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for</div>         <div id=""back""><b>Statement</b>&nbsp;that loops through a block of code a number of times.</div>         <div id=""additional-info""><div>If you omit statement 2, you must provide a break inside the loop.</div></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(statement&nbsp;<span style=""color: red;"">1</span>; statement&nbsp;<span style=""color: red;"">2</span>; statement&nbsp;<span style=""color: red;"">3</span>) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""BMW""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Ford""</span>];<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt; cars.length; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;text += cars[i] +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for ... in</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for ... in</div>         <div id=""back""><b>Statement</b>&nbsp;that loops through the properties of an object.</div>         <div id=""additional-info""></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(x</i>&nbsp;<span style=""color: mediumblue;"">in</span><span style=""color: red;"">&nbsp;</span><i>object) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><font color=""#555753"">// example 1<br></font>constperson = {fname:<span style=""color: brown;"">""John""</span>, lname:<span style=""color: brown;"">""Doe""</span>, age:<span style=""color: red;"">25</span>};<br><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person) {<br><span style=""color: red;""></span>&nbsp; text += person[x] +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}<br><br><font color=""#555753"">// example 2<br></font><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""BMW""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Ford""</span>];<br><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars) {<br><span style=""color: red;""></span>&nbsp; text += cars[x] +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for ... of&nbsp;</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;for ... of&nbsp;</div>         <div id=""back""><b>Statement</b>&nbsp;that loops through the values of an iterable object.</div>         <div id=""additional-info""></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(x</i>&nbsp;of&nbsp;<i>iterable) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><font color=""#555753"">// example 1<br></font><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">'BMW'</span>,&nbsp;<span style=""color: brown;"">'Volvo'</span>,&nbsp;<span style=""color: brown;"">'Mini'</span>];<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x of cars) {<br><span style=""color: red;""></span>&nbsp; text += x +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}<br><br><span style=""color: rgb(85, 87, 83);"">// example 2</span><br style=""color: rgb(85, 87, 83);""><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""JavaScript""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x of text) {<br><span style=""color: red;""></span>&nbsp; text += x +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;function</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;function</div>         <div id=""back""><b>Statement</b>&nbsp;that declares a function.</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">function</span>&nbsp;<i><em>functionName</em></i>(<i><em>parameter</em>s</i>)<i>&nbsp;{<br><span style=""color: red;""></span>&nbsp;&nbsp;<em>code to be executed</em><br><span style=""color: red;""></span>}</i></div>         <div id=""example""><span style=""color: green;"">// Declare a function<br></span><span style=""color: mediumblue;"">function</span>&nbsp;myFunction() {<br><span style=""color: red;""></span>&nbsp;&nbsp;document.getElementById(<span style=""color: brown;"">""demo""</span>).innerHTML&nbsp;=&nbsp;<span style=""color: brown;"">""Hello World!""</span>;<br><span style=""color: red;""></span>}<br><span style=""color: red;""></span><br><span style=""color: red;""></span><span style=""color: green;"">// Call the function<br></span>myFunction();</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;if ... else ... else if</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;if ... else ... else if</div>         <div id=""back""><b>Statement</b>&nbsp;that marks a block of statements to be executed depending on a condition.</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">if</span>&nbsp;(<i>condition1</i>) {<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if condition1 is true<br></span><span style=""color: red;""></span></em>}&nbsp;<span style=""color: mediumblue;"">else</span>&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(<i>condition2</i>) {<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if the condition1 is false and condition2 is true</span></em><br><span style=""color: red;""></span>}&nbsp;<span style=""color: mediumblue;"">else</span>&nbsp;{<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if the condition1 is false and condition2 is false<br></span><span style=""color: red;""></span></em>}</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;let</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;let</div>         <div id=""back""><b>Statement</b>&nbsp;that declares a <b>local</b> variable.</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>let&nbsp;<em>name</em>&nbsp;=&nbsp;<em>value</em>;</div></div></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;return</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;return</div>         <div id=""back""><b>Statement</b>&nbsp;that stops the execution of a function and returns a value from that function.</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>return&nbsp;<em>value</em>; <font color=""#555753"">// value optional&nbsp;</font></div></div></div>         <div id=""example""><span style=""color: mediumblue;"">function</span>&nbsp;myFunction() {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;Math.PI;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;switch ... case ... default</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;switch ... case ... default</div>         <div id=""back""><b>Statement</b>&nbsp;that&nbsp;marks a block of statements to be executed depending on different cases.</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">switch</span>(<em>expression</em>) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<em>n</em>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp; code block<br><span style=""color: red;""></span></em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<em>n</em>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp; code block<br><span style=""color: red;""></span></em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>&nbsp;code block<br><span style=""color: red;""></span></em>}</div>         <div id=""example""><span style=""color: mediumblue;"">var</span>&nbsp;text;<br><span style=""color: mediumblue;"">var</span>&nbsp;fruits = document.getElementById(<span style=""color: brown;"">""myInput""</span>).value;<br><br><span style=""color: red;""></span><span style=""color: mediumblue;"">switch</span>(fruits) {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Banana""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""Banana is good!""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Orange""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""I am not a fan of orange.""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Apple""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""How you like them apples?""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>:<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span>text =&nbsp;<span style=""color: brown;"">""I have never heard of that fruit...""</span>;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;throw</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;throw</div>         <div id=""back""><b>Statement</b>&nbsp;that&nbsp;throws (generates) an error.</div>         <div id=""additional-info"">Allows you to create a custom error.</div>         <div id=""options""><div><div>throw&nbsp;<em>expression</em>;</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: brown;"">""Too big""</span>;&nbsp;&nbsp;<span style=""color: green;"">// throw a text<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: red;"">500</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw a number<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: mediumblue;"">false</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw a boolean<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;person;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw an object</span></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;try ... catch ... finally</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;try ... catch ... finally</div>         <div id=""back""><b>Statement</b>&nbsp;that&nbsp;marks the block of statements to be executed when an error occurs in a try block, and implements error handling.</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">try</span>&nbsp;{<br>&nbsp;&nbsp;<em>tryCode - Code block to run<br></em>}<br><span style=""color: mediumblue;"">catch</span>(<em>err</em>) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<em>catchCode -<span style=""color: red;"">&nbsp;</span>Code block to handle errors<br></em>}<br><span style=""color: mediumblue;"">finally</span>&nbsp;{<br>&nbsp;&nbsp;<em>finallyCode - Code block to be executed regardless of the&nbsp;<span style=""color: mediumblue;"">try</span>&nbsp;result<br></em>}</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;var</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;var</div>         <div id=""back""><b>Statement</b>&nbsp;that declares a <b>global</b> variable.</div>         <div id=""additional-info"">ECMAScript6 (ES6 / JavaScript 2015) encourage you to declare variables with let not var.</div>         <div id=""options""><div><div>var&nbsp;<em>name</em>&nbsp;=&nbsp;<em>value</em>;</div></div></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;while</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement:</b>&nbsp;while</div>         <div id=""back""><b>Statement</b> that marks a block of statements to be executed while a condition is true. Doesn't execute if the condition is false.&nbsp;</div>         <div id=""additional-info"">Unlike the ""do ... while"" loop the while loop does not ever execute if the statement is false.</div>         <div id=""options""><span style=""color: mediumblue;"">while</span>&nbsp;(condition) {<br>&nbsp;<font color=""#868888""> // code block to be executed</font><br>}</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b> that exits a switch or a loop.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b> that exits a switch or a loop.</div>         <div id=""back""><b>Statement:</b> break</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><font color=""#555753"">// example 1: loop<br></font><font color=""#0000cd"">let</font>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt;&nbsp;<span style=""color: red;"">5</span>; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br><span style=""color: mediumblue;""><br></span><span style=""color: rgb(85, 87, 83);"">// example 2: switch/case</span><br style=""color: rgb(85, 87, 83);""><span style=""color: mediumblue;"">let</span>&nbsp;day;<br><span style=""color: mediumblue;"">switch</span>&nbsp;(<span style=""color: mediumblue;"">new</span>&nbsp;Date().getDay()) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">0</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Sunday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">1</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Monday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">2</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Tuesday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: red;"">3</span>:<br><span style=""color: red;""></span>&nbsp; &nbsp; day =&nbsp;<span style=""color: brown;"">""Wednesday""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a class.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a class.</div>         <div id=""back""><b>Statement:</b>&nbsp;class</div>         <div id=""additional-info""><div><div>Unlike functions, class declarations are not hoisted (you must declare a class before you can use it).</div></div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// Create a Car class<br></span><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br><span style=""color: red;""></span>constructor(brand) {<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;= brand;<br><span style=""color: red;""></span>&nbsp; }<br><span style=""color: red;""></span>}<br><span style=""color: red;""></span><br><span style=""color: red;""></span><span style=""color: green;"">// Create a Car Object<br></span>myCar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a variable with a constant value.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a variable with a constant value.</div>         <div id=""back""><b>Statement:</b>&nbsp;const</div>         <div id=""additional-info"">Constant values can not be reassigned (although values, properties and other attributes may be altered).</div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;car = {type:<span style=""color: brown;"">""Fiat""</span>, model:<span style=""color: brown;"">""500""</span>, color:<span style=""color: brown;"">""white""</span>};<br><font color=""#555753"">// car = 33; would throw an error<br></font><span style=""color: rgb(85, 87, 83);"">// car.type = 33; would change the type to 33 with no errors</span><br style=""color: rgb(85, 87, 83);""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;breaks one iteration (in the loop) if a specified condition occurs, and continues with the next iteration in the loop.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;breaks one iteration (in the loop) if a specified condition occurs, and continues with the next iteration in the loop.</div>         <div id=""back""><b>Statement:</b>&nbsp;continue</div>         <div id=""additional-info"">The difference between continue and the break statement, is instead of ""jumping out"" of a loop, the continue statement ""jumps over"" one iteration in the loop.</div>         <div id=""options""><div><div>continue<i>&nbsp;labelname;</i></div></div></div>         <div id=""example""><font color=""#555753"">// example 1<br></font><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt;&nbsp;<span style=""color: red;"">5</span>; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">continue</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br><br><span style=""color: rgb(85, 87, 83);"">// example 2<br></span><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>;<br><span style=""color: mediumblue;"">while</span>&nbsp;(i &lt;&nbsp;<span style=""color: red;"">5</span>) {<br><span style=""color: red;""></span>&nbsp; i++;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(i ===&nbsp;<span style=""color: red;"">3</span>)&nbsp;<span style=""color: mediumblue;"">continue</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}<br style=""color: rgb(85, 87, 83);""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that stops the execution of JavaScript, and calls (if available) the debugging function.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that stops the execution of JavaScript, and calls (if available) the debugging function.</div>         <div id=""back""><b>Statement:</b>&nbsp;debugger</div>         <div id=""additional-info""><div>If no debugging is available, the debugger statement has no effect.</div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;x =&nbsp;<span style=""color: red;"">15</span>&nbsp;*&nbsp;<span style=""color: red;"">5</span>;<br><span style=""color: mediumblue;"">debugger</span>;<br><font color=""#555753"">// everything after this line will only show up when the debugger is off</font></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that executes a block of statements and repeats the block while a condition is true (executes at least once).</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that executes a block of statements and repeats the block while a condition is true (executes at least once).</div>         <div id=""back""><b>Statement:</b>&nbsp;do ... while</div>         <div id=""additional-info"">The do...while is used when you want to run a code block at least one time. </div>         <div id=""options""><span style=""color: mediumblue;"">do</span>&nbsp;{<br><span style=""color: red;""></span><i>&nbsp; code block to be executed<br></i>}<br><span style=""color: mediumblue;"">while</span>&nbsp;(<em>condition</em>);</div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>;<br><span style=""color: mediumblue;"">do</span>&nbsp;{<br><span style=""color: red;""></span>&nbsp;&nbsp;text += i +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>&nbsp; i++;<br><span style=""color: red;""></span>}<br><span style=""color: mediumblue;"">while</span>&nbsp;(i &lt;&nbsp;<span style=""color: red;"">5</span>);</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through a block of code a number of times.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through a block of code a number of times.</div>         <div id=""back""><b>Statement:</b>&nbsp;for</div>         <div id=""additional-info""><div>If you omit statement 2, you must provide a break inside the loop.</div></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(statement&nbsp;<span style=""color: red;"">1</span>; statement&nbsp;<span style=""color: red;"">2</span>; statement&nbsp;<span style=""color: red;"">3</span>) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""BMW""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Ford""</span>];<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;i =&nbsp;<span style=""color: red;"">0</span>; i &lt; cars.length; i++) {<br><span style=""color: red;""></span>&nbsp;&nbsp;text += cars[i] +&nbsp;<span style=""color: brown;"">""&lt;br&gt;""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through the properties of an object.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through the properties of an object.</div>         <div id=""back""><b>Statement:</b>&nbsp;for ... in</div>         <div id=""additional-info""></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(x</i>&nbsp;<span style=""color: mediumblue;"">in</span><span style=""color: red;"">&nbsp;</span><i>object) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><font color=""#555753"">// example 1<br></font>constperson = {fname:<span style=""color: brown;"">""John""</span>, lname:<span style=""color: brown;"">""Doe""</span>, age:<span style=""color: red;"">25</span>};<br><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person) {<br><span style=""color: red;""></span>&nbsp; text += person[x] +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}<br><br><font color=""#555753"">// example 2<br></font><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""BMW""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Ford""</span>];<br><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars) {<br><span style=""color: red;""></span>&nbsp; text += cars[x] +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through the values of an iterable object.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that loops through the values of an iterable object.</div>         <div id=""back""><b>Statement:</b>&nbsp;for ... of&nbsp;</div>         <div id=""additional-info""></div>         <div id=""options""><i><span style=""color: mediumblue;"">for</span>&nbsp;(x</i>&nbsp;of&nbsp;<i>iterable) {<br>&nbsp;&nbsp;code block to be executed<br>}</i></div>         <div id=""example""><font color=""#555753"">// example 1<br></font><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""""</span>;<br><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">'BMW'</span>,&nbsp;<span style=""color: brown;"">'Volvo'</span>,&nbsp;<span style=""color: brown;"">'Mini'</span>];<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x of cars) {<br><span style=""color: red;""></span>&nbsp; text += x +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}<br><br><span style=""color: rgb(85, 87, 83);"">// example 2</span><br style=""color: rgb(85, 87, 83);""><span style=""color: mediumblue;"">let</span>&nbsp;text =&nbsp;<span style=""color: brown;"">""JavaScript""</span>;<br><span style=""color: mediumblue;"">for</span>&nbsp;(<span style=""color: mediumblue;"">let</span>&nbsp;x of text) {<br><span style=""color: red;""></span>&nbsp; text += x +&nbsp;<span style=""color: brown;"">"" ""</span>;<br><span style=""color: red;""></span>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a function.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a function.</div>         <div id=""back""><b>Statement:</b>&nbsp;function</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">function</span>&nbsp;<i><em>functionName</em></i>(<i><em>parameter</em>s</i>)<i>&nbsp;{<br><span style=""color: red;""></span>&nbsp;&nbsp;<em>code to be executed</em><br><span style=""color: red;""></span>}</i></div>         <div id=""example""><span style=""color: green;"">// Declare a function<br></span><span style=""color: mediumblue;"">function</span>&nbsp;myFunction() {<br><span style=""color: red;""></span>&nbsp;&nbsp;document.getElementById(<span style=""color: brown;"">""demo""</span>).innerHTML&nbsp;=&nbsp;<span style=""color: brown;"">""Hello World!""</span>;<br><span style=""color: red;""></span>}<br><span style=""color: red;""></span><br><span style=""color: red;""></span><span style=""color: green;"">// Call the function<br></span>myFunction();</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that marks a block of statements to be executed depending on a condition.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that marks a block of statements to be executed depending on a condition.</div>         <div id=""back""><b>Statement:</b>&nbsp;if ... else ... else if</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">if</span>&nbsp;(<i>condition1</i>) {<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if condition1 is true<br></span><span style=""color: red;""></span></em>}&nbsp;<span style=""color: mediumblue;"">else</span>&nbsp;<span style=""color: mediumblue;"">if</span>&nbsp;(<i>condition2</i>) {<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if the condition1 is false and condition2 is true</span></em><br><span style=""color: red;""></span>}&nbsp;<span style=""color: mediumblue;"">else</span>&nbsp;{<br><span style=""color: red;""></span><em>&nbsp;&nbsp;<span style=""color: green;"">// block of code to be executed if the condition1 is false and condition2 is false<br></span><span style=""color: red;""></span></em>}</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a <b>local</b> variable.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a <b>local</b> variable.</div>         <div id=""back""><b>Statement:</b>&nbsp;let</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>let&nbsp;<em>name</em>&nbsp;=&nbsp;<em>value</em>;</div></div></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that stops the execution of a function and returns a value from that function.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that stops the execution of a function and returns a value from that function.</div>         <div id=""back""><b>Statement:</b>&nbsp;return</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>return&nbsp;<em>value</em>; <font color=""#555753"">// value optional&nbsp;</font></div></div></div>         <div id=""example""><span style=""color: mediumblue;"">function</span>&nbsp;myFunction() {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;Math.PI;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;marks a block of statements to be executed depending on different cases.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;marks a block of statements to be executed depending on different cases.</div>         <div id=""back""><b>Statement:</b>&nbsp;switch ... case ... default</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">switch</span>(<em>expression</em>) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<em>n</em>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp; code block<br><span style=""color: red;""></span></em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<em>n</em>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp; code block<br><span style=""color: red;""></span></em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>:<br><span style=""color: red;""></span><em>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>&nbsp;code block<br><span style=""color: red;""></span></em>}</div>         <div id=""example""><span style=""color: mediumblue;"">var</span>&nbsp;text;<br><span style=""color: mediumblue;"">var</span>&nbsp;fruits = document.getElementById(<span style=""color: brown;"">""myInput""</span>).value;<br><br><span style=""color: red;""></span><span style=""color: mediumblue;"">switch</span>(fruits) {<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Banana""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""Banana is good!""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Orange""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""I am not a fan of orange.""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">case</span>&nbsp;<span style=""color: brown;"">""Apple""</span>:<br>&nbsp;&nbsp;&nbsp; text =&nbsp;<span style=""color: brown;"">""How you like them apples?""</span>;<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">break</span>;<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">default</span>:<br><span style=""color: red;""></span>&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span>text =&nbsp;<span style=""color: brown;"">""I have never heard of that fruit...""</span>;<br>}</div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;throws (generates) an error.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;throws (generates) an error.</div>         <div id=""back""><b>Statement:</b>&nbsp;throw</div>         <div id=""additional-info"">Allows you to create a custom error.</div>         <div id=""options""><div><div>throw&nbsp;<em>expression</em>;</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: brown;"">""Too big""</span>;&nbsp;&nbsp;<span style=""color: green;"">// throw a text<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: red;"">500</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw a number<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;<span style=""color: mediumblue;"">false</span>;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw a boolean<br></span><span style=""color: mediumblue;"">throw</span>&nbsp;person;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// throw an object</span></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;marks the block of statements to be executed when an error occurs in a try block, and implements error handling.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that&nbsp;marks the block of statements to be executed when an error occurs in a try block, and implements error handling.</div>         <div id=""back""><b>Statement:</b>&nbsp;try ... catch ... finally</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">try</span>&nbsp;{<br>&nbsp;&nbsp;<em>tryCode - Code block to run<br></em>}<br><span style=""color: mediumblue;"">catch</span>(<em>err</em>) {<br><span style=""color: red;""></span>&nbsp;&nbsp;<em>catchCode -<span style=""color: red;"">&nbsp;</span>Code block to handle errors<br></em>}<br><span style=""color: mediumblue;"">finally</span>&nbsp;{<br>&nbsp;&nbsp;<em>finallyCode - Code block to be executed regardless of the&nbsp;<span style=""color: mediumblue;"">try</span>&nbsp;result<br></em>}</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a <b>global</b> variable.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b>&nbsp;that declares a <b>global</b> variable.</div>         <div id=""back""><b>Statement:</b>&nbsp;var</div>         <div id=""additional-info"">ECMAScript6 (ES6 / JavaScript 2015) encourage you to declare variables with let not var.</div>         <div id=""options""><div><div>var&nbsp;<em>name</em>&nbsp;=&nbsp;<em>value</em>;</div></div></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b> that marks a block of statements to be executed while a condition is true. Doesn't execute if the condition is false.&nbsp;</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Statements</div>         <div id=""front""><b>Statement</b> that marks a block of statements to be executed while a condition is true. Doesn't execute if the condition is false.&nbsp;</div>         <div id=""back""><b>Statement:</b>&nbsp;while</div>         <div id=""additional-info"">Unlike the ""do ... while"" loop the while loop does not ever execute if the statement is false.</div>         <div id=""options""><span style=""color: mediumblue;"">while</span>&nbsp;(condition) {<br>&nbsp;<font color=""#868888""> // code block to be executed</font><br>}</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><i>class</i>.constructor()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><i>class</i>.constructor()</div>         <div id=""back""><b>Class method </b>for creating and initializing objects created within a class</div>         <div id=""additional-info"">This method is called automatically when a new instance of that class is made.</div>         <div id=""options""><div><div><i>class</i>.constructor(<em>parameters</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp;<span style=""color: red;"">&nbsp;</span>constructor(brand) {&nbsp;&nbsp;<span style=""color: green;"">// Constructor<br></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;= brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br>mycar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class method </b>for creating and initializing objects created within a class</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class method </b>for creating and initializing objects created within a class</div>         <div id=""back""><i>class</i>.constructor()</div>         <div id=""additional-info"">This method is called automatically when a new instance of that class is made.</div>         <div id=""options""><div><div><i>class</i>.constructor(<em>parameters</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp;<span style=""color: red;"">&nbsp;</span>constructor(brand) {&nbsp;&nbsp;<span style=""color: green;"">// Constructor<br></span>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;= brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br>mycar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>extends</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>extends</div>         <div id=""back""><b>Class keyword</b> that is used to create a child class of another class (parent).</div>         <div id=""additional-info""><div>By calling the&nbsp;<code>super()</code>&nbsp;method in the constructor method, we call the parent's constructor method and gets access to the parent's properties and methods.</div></div>         <div id=""options""><div><div>class&nbsp;<em>childClass&nbsp;</em>extends&nbsp;<em>parentClass</em></div></div></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class keyword</b> that is used to create a child class of another class (parent).</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class keyword</b> that is used to create a child class of another class (parent).</div>         <div id=""back""><b>Class Keyword: </b>extends</div>         <div id=""additional-info""><div>By calling the&nbsp;<code>super()</code>&nbsp;method in the constructor method, we call the parent's constructor method and gets access to the parent's properties and methods.</div></div>         <div id=""options""><div><div>class&nbsp;<em>childClass&nbsp;</em>extends&nbsp;<em>parentClass</em></div></div></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>static</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>static</div>         <div id=""back""><b style="""">Class keyword</b> that defines a static method for a class.</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>static&nbsp;<em>methodName</em>()</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp; constructor(brand) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;=&nbsp;<span style=""color: red;""></span>brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">static</span>&nbsp;hello(x) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: brown;"">""Hello ""</span>&nbsp;+&nbsp;<span style=""color: red;""></span>x.carname;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br>mycar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);<br>Car.hello(mycar);<font color=""#555753""> // Returns ""Hello Ford""</font></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b style="""">Class keyword</b> that defines a static method for a class.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b style="""">Class keyword</b> that defines a static method for a class.</div>         <div id=""back""><b>Class Keyword: </b>static</div>         <div id=""additional-info""></div>         <div id=""options""><div><div>static&nbsp;<em>methodName</em>()</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp; constructor(brand) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;=&nbsp;<span style=""color: red;""></span>brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp;&nbsp;<span style=""color: mediumblue;"">static</span>&nbsp;hello(x) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: brown;"">""Hello ""</span>&nbsp;+&nbsp;<span style=""color: red;""></span>x.carname;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br>mycar =&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Car(<span style=""color: brown;"">""Ford""</span>);<br>Car.hello(mycar);<font color=""#555753""> // Returns ""Hello Ford""</font></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>super</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class Keyword: </b>super</div>         <div id=""back""><b>Class keyword </b>that refers to the parent class.</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">super</span>(<em><span style=""color: mediumblue;"">arguments</span></em>);&nbsp;&nbsp;<span style=""color: green;"">// calls the parent constructor (only inside the constructor)<br></span><span style=""color: mediumblue;"">super</span>.<em>parentMethod</em>(<em><span style=""color: mediumblue;"">arguments</span></em>);</div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp; constructor(brand) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;=&nbsp;<span style=""color: red;""></span>brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp; present() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: brown;"">'I have a '</span>&nbsp;+&nbsp;<span style=""color: mediumblue;"">this</span>.carname;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br><br><span style=""color: mediumblue;"">class</span>&nbsp;Model&nbsp;<strong><span style=""color: mediumblue;"">extends</span></strong>&nbsp;Car {<br>&nbsp;<span style=""color: red;"">&nbsp;</span>constructor(brand, mod) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong><span style=""color: mediumblue;"">super</span>(brand);</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.model&nbsp;= mod;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp; show() {<br>&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: mediumblue;"">this</span>.present() +&nbsp;<span style=""color: brown;"">', it is a '</span>&nbsp;+&nbsp;<span style=""color: mediumblue;"">this</span>.model;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class keyword </b>that refers to the parent class.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Classes</div>         <div id=""front""><b>Class keyword </b>that refers to the parent class.</div>         <div id=""back""><b>Class Keyword: </b>super</div>         <div id=""additional-info""></div>         <div id=""options""><span style=""color: mediumblue;"">super</span>(<em><span style=""color: mediumblue;"">arguments</span></em>);&nbsp;&nbsp;<span style=""color: green;"">// calls the parent constructor (only inside the constructor)<br></span><span style=""color: mediumblue;"">super</span>.<em>parentMethod</em>(<em><span style=""color: mediumblue;"">arguments</span></em>);</div>         <div id=""example""><span style=""color: mediumblue;"">class</span>&nbsp;Car {<br>&nbsp; constructor(brand) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.carname&nbsp;=&nbsp;<span style=""color: red;""></span>brand;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp; present() {<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: brown;"">'I have a '</span>&nbsp;+&nbsp;<span style=""color: mediumblue;"">this</span>.carname;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}<br><br><span style=""color: mediumblue;"">class</span>&nbsp;Model&nbsp;<strong><span style=""color: mediumblue;"">extends</span></strong>&nbsp;Car {<br>&nbsp;<span style=""color: red;"">&nbsp;</span>constructor(brand, mod) {<br>&nbsp;&nbsp;&nbsp;&nbsp;<strong><span style=""color: mediumblue;"">super</span>(brand);</strong><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: mediumblue;"">this</span>.model&nbsp;= mod;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>&nbsp; show() {<br>&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: mediumblue;"">return</span>&nbsp;<span style=""color: mediumblue;"">this</span>.present() +&nbsp;<span style=""color: brown;"">', it is a '</span>&nbsp;+&nbsp;<span style=""color: mediumblue;"">this</span>.model;<br>&nbsp;<span style=""color: red;"">&nbsp;</span>}<br>}</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">JSON.parse(<i>string</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">JSON.parse(<i>string</i>)</div>         <div id=""back""><b>JSON method </b>that parses a JSON string and returns a JavaScript object.</div>         <div id=""additional-info""></div>         <div id=""options"">JSON.parse(<i>string</i>,&nbsp;<i>function</i>)</div>         <div id=""example""><div><span style=""color: mediumblue;"">var</span>&nbsp;obj = JSON.parse(<span style=""color: brown;"">'{""firstName"":""John"", ""lastName"":""Doe""}'</span>);</div></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><b>JSON method </b>that parses a JSON string and returns a JavaScript object.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><b>JSON method </b>that parses a JSON string and returns a JavaScript object.</div>         <div id=""back"">JSON.parse(<i>string</i>)</div>         <div id=""additional-info""></div>         <div id=""options"">JSON.parse(<i>string</i>,&nbsp;<i>function</i>)</div>         <div id=""example""><div><span style=""color: mediumblue;"">var</span>&nbsp;obj = JSON.parse(<span style=""color: brown;"">'{""firstName"":""John"", ""lastName"":""Doe""}'</span>);</div></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><div><div>JSON.stringify(<em>obj</em>)</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><div><div>JSON.stringify(<em>obj</em>)</div></div></div>         <div id=""back""><b>JSON method </b>that converts JavaScript objects into strings.</div>         <div id=""additional-info""><div>When sending data to a web server the data has to be a string.</div></div>         <div id=""options""><div><div>JSON.stringify(<em>obj, replacer, space</em>)</div></div></div>         <div id=""example""></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><b>JSON method </b>that converts JavaScript objects into strings.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front""><b>JSON method </b>that converts JavaScript objects into strings.</div>         <div id=""back""><div><div>JSON.stringify(<em>obj</em>)</div></div></div>         <div id=""additional-info""><div>When sending data to a web server the data has to be a string.</div></div>         <div id=""options""><div><div>JSON.stringify(<em>obj, replacer, space</em>)</div></div></div>         <div id=""example""></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What JSON data types are allowed? (6 total)         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What JSON data types are allowed? (6 total)         </div>         <div id=""back-basic"">                 <ul><li>a string</li><li>a number</li><li>an object (containing valid JSON values)</li><li>an array</li><li>a boolean</li><li><em>null</em></li></ul>         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What JSON data types are <b>not</b> allowed? (3 total)         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What JSON data types are <b>not</b> allowed? (3 total)         </div>         <div id=""back-basic"">                 <ul><li>a function</li><li>a date</li><li><em>undefined</em></li></ul>         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES5</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What is JSON?         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::JSON</div>         <div id=""front"">                 What is JSON?         </div>         <div id=""back-basic"">                 <b>JavaScript Object Notation</b> - JSON is a format for storing and transporting data.&nbsp;JSON is text, and text can be transported anywhere, and read by any programming language.         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info""><div>JavaScript Objects can be converted into JSON, and JSON can be converted back into JavaScript Objects. This way we can work with the data as JavaScript objects, with no complicated parsing or translations.</div></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">                 How many number types does JavaScript have?         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">                 How many number types does JavaScript have?         </div>         <div id=""back-basic"">                 <div>JavaScript has only one type of number.</div>         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info"">Numbers can be written with, or without, decimals.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.isInteger(<i>value</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.isInteger(<i>value</i>)</div>         <div id=""back""><b>Number method </b>that checks whether a value is an integer.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that checks whether a value is an integer.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that checks whether a value is an integer.</div>         <div id=""back"">Number.isInteger(<i>value</i>)</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.isNaN(<em>value</em>)</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.isNaN(<em>value</em>)</div></div></div>         <div id=""back""><b>Number method</b> that returns true if the value is NaN, and the type is a Number, else false.</div>         <div id=""additional-info""><div>In JavaScript,&nbsp;<code>NaN</code>&nbsp;is a number that is not a legal number, it stands for Not a Number.</div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// This returns true;<br></span>isNaN(<span style=""color: brown;"">'Hello'</span>);<br><span style=""color: green;""><br>// This returns false;<br></span>Number.isNaN(<span style=""color: brown;"">'Hello'</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns true if the value is NaN, and the type is a Number, else false.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns true if the value is NaN, and the type is a Number, else false.</div>         <div id=""back""><div><div>Number.isNaN(<em>value</em>)</div></div></div>         <div id=""additional-info""><div>In JavaScript,&nbsp;<code>NaN</code>&nbsp;is a number that is not a legal number, it stands for Not a Number.</div></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// This returns true;<br></span>isNaN(<span style=""color: brown;"">'Hello'</span>);<br><span style=""color: green;""><br>// This returns false;<br></span>Number.isNaN(<span style=""color: brown;"">'Hello'</span>);</div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.isSafeInteger(<i>value</i>)</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.isSafeInteger(<i>value</i>)</div>         <div id=""back""><b>Number method</b> that checks whether a value is a safe integer.</div>         <div id=""additional-info"">Safe integer refers to a numbers ability to be represented as a number (smaller than 2^53 - 1).</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that checks whether a value is a safe integer.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that checks whether a value is a safe integer.</div>         <div id=""back"">Number.isSafeInteger(<i>value</i>)</div>         <div id=""additional-info"">Safe integer refers to a numbers ability to be represented as a number (smaller than 2^53 - 1).</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toExponental()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toExponental()</div>         <div id=""back""><b>Number method </b>that converts a number into an exponential notation.</div>         <div id=""additional-info""><i>x </i>value optional. An integer between 0 and 20 representing the number of digits in the notation after the decimal point. If omitted, it is set to as many digits as necessary to represent the value.</div>         <div id=""options""><i>number</i>.toExponental(<i>x</i>)</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that converts a number into an exponential notation.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that converts a number into an exponential notation.</div>         <div id=""back""><i>number</i>.toExponental()</div>         <div id=""additional-info""><i>x </i>value optional. An integer between 0 and 20 representing the number of digits in the notation after the decimal point. If omitted, it is set to as many digits as necessary to represent the value.</div>         <div id=""options""><i>number</i>.toExponental(<i>x</i>)</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toFixed()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toFixed()</div>         <div id=""back""><b>Number method&nbsp;</b>that formats a number with x numbers of digits after the decimal point.</div>         <div id=""additional-info"">The representation of a number with (or without) decimals.</div>         <div id=""options""><i>number</i>.toFixed(<i>x=0</i>)</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that formats a number with x numbers of digits after the decimal point.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that formats a number with x numbers of digits after the decimal point.</div>         <div id=""back""><i>number</i>.toFixed()</div>         <div id=""additional-info"">The representation of a number with (or without) decimals.</div>         <div id=""options""><i>number</i>.toFixed(<i>x=0</i>)</div>         <div id=""example""></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toLocalString()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><i>number</i>.toLocalString()</div>         <div id=""back""><b>Number method&nbsp;</b>that converts a number into a string, based on the locale settings.</div>         <div id=""additional-info""></div>         <div id=""options""><div><div><i>number</i>.toLocaleString(<em>locales</em>,&nbsp;<em>options</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;num =&nbsp;<span style=""color: red;"">1000000</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;text = num.toLocaleString(<span style=""color: brown;"">""en-US""</span>, {style:<span style=""color: brown;"">""currency""</span>, currency:<span style=""color: brown;"">""USD""</span>});</div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that converts a number into a string, based on the locale settings.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that converts a number into a string, based on the locale settings.</div>         <div id=""back""><i>number</i>.toLocalString()</div>         <div id=""additional-info""></div>         <div id=""options""><div><div><i>number</i>.toLocaleString(<em>locales</em>,&nbsp;<em>options</em>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;num =&nbsp;<span style=""color: red;"">1000000</span>;<br><span style=""color: mediumblue;"">let</span>&nbsp;text = num.toLocaleString(<span style=""color: brown;"">""en-US""</span>, {style:<span style=""color: brown;"">""currency""</span>, currency:<span style=""color: brown;"">""USD""</span>});</div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.toPrecision()</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.toPrecision()</div></div></div>         <div id=""back""><div><b>Number method</b> that formats a number to a specified length.</div></div>         <div id=""additional-info"">If no value is provided it will return the number with no formatting.</div>         <div id=""options""><div><div><i>number</i>.toPrecision(<i>x</i>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;num =&nbsp;<span style=""color: red;"">13.3714</span>;<br>num.toPrecision(<span style=""color: red;"">2</span>); <font color=""#555753"">// 13</font><br>num.toPrecision(<span style=""color: red;"">3</span>); // 13.4<br>num.toPrecision(<span style=""color: red;"">10</span>); <font color=""#555753"">// 13.37140000</font></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><b>Number method</b> that formats a number to a specified length.</div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><b>Number method</b> that formats a number to a specified length.</div></div>         <div id=""back""><div><div><i>number</i>.toPrecision()</div></div></div>         <div id=""additional-info"">If no value is provided it will return the number with no formatting.</div>         <div id=""options""><div><div><i>number</i>.toPrecision(<i>x</i>)</div></div></div>         <div id=""example""><span style=""color: mediumblue;"">let</span>&nbsp;num =&nbsp;<span style=""color: red;"">13.3714</span>;<br>num.toPrecision(<span style=""color: red;"">2</span>); <font color=""#555753"">// 13</font><br>num.toPrecision(<span style=""color: red;"">3</span>); // 13.4<br>num.toPrecision(<span style=""color: red;"">10</span>); <font color=""#555753"">// 13.37140000</font></div>         <div id=""version"">ES3</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.toString()</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.toString()</div></div></div>         <div id=""back""><b>Number method</b> that returns the number as a string.</div>         <div id=""additional-info"">All JavaScript objects hace a toString method.<br>The radix like the modulo the number operates on (normal is 10, 2 is binary,&nbsp;16 is hex).&nbsp;</div>         <div id=""options""><i>number</i>.toString(<em>radix=10</em>)</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns the number as a string.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns the number as a string.</div>         <div id=""back""><div><div><i>number</i>.toString()</div></div></div>         <div id=""additional-info"">All JavaScript objects hace a toString method.<br>The radix like the modulo the number operates on (normal is 10, 2 is binary,&nbsp;16 is hex).&nbsp;</div>         <div id=""options""><i>number</i>.toString(<em>radix=10</em>)</div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.valueOf()</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div><i>number</i>.valueOf()</div></div></div>         <div id=""back""><b>Number method&nbsp;</b>that returns the primitive value of a number.</div>         <div id=""additional-info"">Usually called by JavaScript under the hood, and not in the actuall viewed code.&nbsp;</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that returns the primitive value of a number.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method&nbsp;</b>that returns the primitive value of a number.</div>         <div id=""back""><div><div><i>number</i>.valueOf()</div></div></div>         <div id=""additional-info"">Usually called by JavaScript under the hood, and not in the actuall viewed code.&nbsp;</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.constructor</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.constructor</div>         <div id=""back""><b>Number property</b> that returns the function that created JavaScript's Number prototype.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property</b> that returns the function that created JavaScript's Number prototype.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property</b> that returns the function that created JavaScript's Number prototype.</div>         <div id=""back"">Number.constructor</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.isFinite(<em>value</em>)</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.isFinite(<em>value</em>)</div></div></div>         <div id=""back""><b>Number method</b> that returns&nbsp;true&nbsp;if a number is a finite number.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// This returns true<br></span>isFinite(<span style=""color: brown;"">""123""</span>)<br><br><span style=""color: green;"">// This returns false<br></span>Number.isFinite(<span style=""color: brown;"">""123""</span>)</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns&nbsp;true&nbsp;if a number is a finite number.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns&nbsp;true&nbsp;if a number is a finite number.</div>         <div id=""back""><div><div>Number.isFinite(<em>value</em>)</div></div></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// This returns true<br></span>isFinite(<span style=""color: brown;"">""123""</span>)<br><br><span style=""color: green;"">// This returns false<br></span>Number.isFinite(<span style=""color: brown;"">""123""</span>)</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">                 What is the difference between&nbsp;isFinite() and Number.isFinite()?         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">                 What is the difference between&nbsp;isFinite() and Number.isFinite()?         </div>         <div id=""back-basic"">                 isFinite() returns true if a value is a finite number. Number.isFinite() returns true if a number is a finite number. In other words: isFinite() converts the value to a number before testing it.         </div>         <div id=""back-code"">                          </div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.MAX_VALUE</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.MAX_VALUE</div></div></div>         <div id=""back""><b>Number property </b>that returns the max value a JavaScript number can be.</div>         <div id=""additional-info"">Returns: 1.7976931348623157e+308</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property </b>that returns the max value a JavaScript number can be.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property </b>that returns the max value a JavaScript number can be.</div>         <div id=""back""><div><div>Number.MAX_VALUE</div></div></div>         <div id=""additional-info"">Returns: 1.7976931348623157e+308</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.MIN_VALUE</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.MIN_VALUE</div>         <div id=""back""><b>Number property&nbsp;</b>that returns the min value a JavaScript number can be.</div>         <div id=""additional-info"">Returns: 5e-324</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property&nbsp;</b>that returns the min value a JavaScript number can be.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property&nbsp;</b>that returns the min value a JavaScript number can be.</div>         <div id=""back"">Number.MIN_VALUE</div>         <div id=""additional-info"">Returns: 5e-324</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.NEGATIVE_INFINITY</div></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><div>Number.NEGATIVE_INFINITY</div></div></div>         <div id=""back""><b>Number property</b> that returns negative infinity.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property</b> that returns negative infinity.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number property</b> that returns negative infinity.</div>         <div id=""back""><div><div>Number.NEGATIVE_INFINITY</div></div></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.NaN</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.NaN</div>         <div id=""back""><b>Number method </b>that returns NaN.</div>         <div id=""additional-info"">Returns the same as the global NaN method.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that returns NaN.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method </b>that returns NaN.</div>         <div id=""back"">Number.NaN</div>         <div id=""additional-info"">Returns the same as the global NaN method.</div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.POSITIVE_INFINITY</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.POSITIVE_INFINITY</div>         <div id=""back""><b>Number method</b> that returns positive infinity.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns positive infinity.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><b>Number method</b> that returns positive infinity.</div>         <div id=""back"">Number.POSITIVE_INFINITY</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.prototype</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front"">Number.prototype</div>         <div id=""back""><div><b>Number property</b> that allows you to add new properties and methods to numbers. <br></div></div>         <div id=""additional-info"">All JavaScript objects have the prototype property.<br>You are not advised to change the prototype of an object that you do not control.</div>         <div id=""options""><div><div>Number.prototype.<em>name&nbsp;</em>=<em>&nbsp;value</em></div></div></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><b>Number property</b> that allows you to add new properties and methods to numbers. <br></div></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Number</div>         <div id=""front""><div><b>Number property</b> that allows you to add new properties and methods to numbers. <br></div></div>         <div id=""back"">Number.prototype</div>         <div id=""additional-info"">All JavaScript objects have the prototype property.<br>You are not advised to change the prototype of an object that you do not control.</div>         <div id=""options""><div><div>Number.prototype.<em>name&nbsp;</em>=<em>&nbsp;value</em></div></div></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 JavaScript Operators:<br><ul><li><span class=cloze>[...]</span>: +</li><li><span class=cloze>[...]</span>: -</li><li><span class=cloze>[...]</span>: *</li><li><span class=cloze>[...]</span>: /</li><li><span class=cloze>[...]</span>: %</li><li><span class=cloze>[...]</span>: ++</li><li><span class=cloze>[...]</span>: --</li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">JavaScript Operators:<br><ul><li><span class=cloze>Addition</span>: +</li><li><span class=cloze>Subtraction</span>: -</li><li><span class=cloze>Multiplication</span>: *</li><li><span class=cloze>Division</span>: /</li><li><span class=cloze>Modulus</span>: %</li><li><span class=cloze>Increment</span>: ++</li><li><span class=cloze>Decrement</span>: --</li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 JavaScript Operators:<br><ul><li>Addition: <span class=cloze>[...]</span></li><li>Subtraction: <span class=cloze>[...]</span></li><li>Multiplication: <span class=cloze>[...]</span></li><li>Division: <span class=cloze>[...]</span></li><li>Modulus: <span class=cloze>[...]</span></li><li>Increment: <span class=cloze>[...]</span></li><li>Decrement: <span class=cloze>[...]</span></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">JavaScript Operators:<br><ul><li>Addition: <span class=cloze>+</span></li><li>Subtraction: <span class=cloze>-</span></li><li>Multiplication: <span class=cloze>*</span></li><li>Division: <span class=cloze>/</span></li><li>Modulus: <span class=cloze>%</span></li><li>Increment: <span class=cloze>++</span></li><li>Decrement: <span class=cloze>--</span></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Assignment Operators<br><ul><li><span class=cloze>[...]</span>: =</li><li><span class=cloze>[...]</span>: -=</li><li><span class=cloze>[...]</span>: +=</li><li><span class=cloze>[...]</span>: *=</li><li><span class=cloze>[...]</span>: /=</li><li><span class=cloze>[...]</span>: %=</li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Assignment Operators<br><ul><li><span class=cloze>Set value</span>: =</li><li><span class=cloze>Subtract from value</span>: -=</li><li><span class=cloze>Add to value</span>: +=</li><li><span class=cloze>Multiply by value</span>: *=</li><li><span class=cloze>Divide by value</span>: /=</li><li><span class=cloze>To the modulus of value</span>: %=</li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Assignment Operators<br><ul><li>Set value: <span class=cloze>[...]</span></li><li>Subtract from value: <span class=cloze>[...]</span></li><li>Add to value: <span class=cloze>[...]</span></li><li>Multiply by value: <span class=cloze>[...]</span></li><li>Divide by value: <span class=cloze>[...]</span></li><li>To the modulus of value: <span class=cloze>[...]</span></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Assignment Operators<br><ul><li>Set value: <span class=cloze>=</span></li><li>Subtract from value: <span class=cloze>-=</span></li><li>Add to value: <span class=cloze>+=</span></li><li>Multiply by value: <span class=cloze>*=</span></li><li>Divide by value: <span class=cloze>/=</span></li><li>To the modulus of value: <span class=cloze>%=</span></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 How do you do a teranary operator in JavaScript?         </div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 How do you do a teranary operator in JavaScript?         </div>         <div id=""back-basic"">                          </div>         <div id=""back-code"">                 <i>variablename</i> = <i>condition</i>&nbsp;? <i>value1</i> : <i>value2</i>         </div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";  [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back-basic"", ""A. "");         addTitle(""back-code"", ""A. "");         addTitle(""options"", ""With Optional Params: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Fill out the following code to complete the ternary operation:<br><br><i>conditionToEvaluate</i> <span class=cloze>[...]</span> <i>ifTrueValue</i> <span class=cloze>[...]</span> <i>ifFalseValue</i>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Fill out the following code to complete the ternary operation:<br><br><i>conditionToEvaluate</i> <span class=cloze>?</span> <i>ifTrueValue</i> <span class=cloze>:</span> <i>ifFalseValue</i></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Fill out the following code to complete the ternary operation:<br><br><span class=cloze>[...]</span> ? <span class=cloze>[...]</span> : <span class=cloze>[...]</span>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Fill out the following code to complete the ternary operation:<br><br><span class=cloze><i>conditionToEvaluate</i></span> ? <span class=cloze><i>ifTrueValue</i></span> : <span class=cloze><i>ifFalseValue</i></span></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 String Operators<br><ul><li><span class=cloze>[...]</span>: +</li><li><span class=cloze>[...]</span>: +=</li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">String Operators<br><ul><li><span class=cloze>Addition</span>: +</li><li><span class=cloze>Add to value</span>: +=</li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 String Operators<br><ul><li>Addition: <span class=cloze>[...]</span></li><li>Add to value: <span class=cloze>[...]</span></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">String Operators<br><ul><li>Addition: <span class=cloze>+</span></li><li>Add to value: <span class=cloze>+=</span></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Comparison Operators:<br><ul><li>Equal to: <span class=cloze>[...]</span></li><li> Equal to and equal type: <span class=cloze>[...]</span></li><li>Not equal: <span class=cloze>[...]</span></li><li>Not equal value or not equal type: <span class=cloze>[...]</span></li><li> Greater than : <span class=cloze>[...]</span></li><li> Greater than or equal to: <span class=cloze>[...]</span></li><li>Less than: <span class=cloze>[...]</span></li><li>Less than or equal to: <span class=cloze>[...]</span><br></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Comparison Operators:<br><ul><li>Equal to: <span class=cloze>==</span></li><li> Equal to and equal type: <span class=cloze>===</span></li><li>Not equal: <span class=cloze>!=</span></li><li>Not equal value or not equal type: <span class=cloze>!==</span></li><li> Greater than : <span class=cloze>&gt;</span></li><li> Greater than or equal to: <span class=cloze>&gt;=</span></li><li>Less than: <span class=cloze>&lt;</span></li><li>Less than or equal to: <span class=cloze>&lt;=</span><br></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Comparison Operators:<br><ul><li><span class=cloze>[...]</span>: ==</li><li><span class=cloze>[...]</span>: ===</li><li><span class=cloze>[...]</span>: !=</li><li><span class=cloze>[...]</span>: !==</li><li><span class=cloze>[...]</span>: &gt;</li><li><span class=cloze>[...]</span>: &gt;=</li><li><span class=cloze>[...]</span>: &lt;</li><li><span class=cloze>[...]</span>: &lt;=<br></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Comparison Operators:<br><ul><li><span class=cloze>Equal to</span>: ==</li><li><span class=cloze> Equal to and equal type</span>: ===</li><li><span class=cloze>Not equal</span>: !=</li><li><span class=cloze>Not equal value or not equal type</span>: !==</li><li><span class=cloze> Greater than </span>: &gt;</li><li><span class=cloze> Greater than or equal to</span>: &gt;=</li><li><span class=cloze>Less than</span>: &lt;</li><li><span class=cloze>Less than or equal to</span>: &lt;=<br></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Logical Operators:<br><ul><li><span class=cloze>[...]</span>: &amp;&amp;</li><li><span class=cloze>[...]</span>: ||</li><li><span class=cloze>[...]</span>: !</li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Logical Operators:<br><ul><li><span class=cloze>and</span>: &amp;&amp;</li><li><span class=cloze>or</span>: ||</li><li><span class=cloze>not</span>: !</li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Logical Operators:<br><ul><li>and: <span class=cloze>[...]</span></li><li>or: <span class=cloze>[...]</span></li><li>not: <span class=cloze>[...]</span></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Logical Operators:<br><ul><li>and: <span class=cloze>&amp;&amp;</span></li><li>or: <span class=cloze>||</span></li><li>not: <span class=cloze>!</span></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Bitwise Operators:<br><ul><li>AND: <span class=cloze>[...]</span><br></li><li>OR: <span class=cloze>[...]</span></li><li>NOT: <span class=cloze>[...]</span></li><li>XOR: <span class=cloze>[...]</span></li><li>Left shift: <span class=cloze>[...]</span></li><li>Right shift: <span class=cloze>[...]</span></li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Bitwise Operators:<br><ul><li>AND: <span class=cloze>&amp;</span><br></li><li>OR: <span class=cloze>|</span></li><li>NOT: <span class=cloze>~</span></li><li>XOR: <span class=cloze>^</span></li><li>Left shift: <span class=cloze>&lt;&lt;</span></li><li>Right shift: <span class=cloze>&gt;&gt;</span></li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">                 Bitwise Operators:<br><ul><li><span class=cloze>[...]</span>: &amp;<br></li><li><span class=cloze>[...]</span>: |</li><li><span class=cloze>[...]</span>: ~</li><li><span class=cloze>[...]</span>: ^</li><li><span class=cloze>[...]</span>: &lt;&lt;</li><li><span class=cloze>[...]</span>: &gt;&gt;</li></ul>         </div> </div> <script>                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front"">Bitwise Operators:<br><ul><li><span class=cloze>AND</span>: &amp;<br></li><li><span class=cloze>OR</span>: |</li><li><span class=cloze>NOT</span>: ~</li><li><span class=cloze>XOR</span>: ^</li><li><span class=cloze>Left shift</span>: &lt;&lt;</li><li><span class=cloze>Right shift</span>: &gt;&gt;</li></ul></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6"";          function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""example"", ""Example:"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator: </b>typeof</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator: </b>typeof</div>         <div id=""back""><b>Operator</b>&nbsp;that returns the type of a variable, object, function or expression.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: brown;"">""John""</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns string<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: red;"">3.14</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns number<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">NaN</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns number<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">false</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: green;"">// Returns boolean<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;[<span style=""color: red;"">1</span>,&nbsp;<span style=""color: red;"">2</span>,&nbsp;<span style=""color: red;"">3</span>,&nbsp;<span style=""color: red;"">4</span>]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;{name:<span style=""color: brown;"">'John'</span>, age:<span style=""color: red;"">34</span>}&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Date()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">function</span>&nbsp;() {} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns function<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;myCar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns undefined (if myCar is not declared)<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">null</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns object</span></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b>&nbsp;that returns the type of a variable, object, function or expression.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b>&nbsp;that returns the type of a variable, object, function or expression.</div>         <div id=""back""><b>Operator: </b>typeof</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: brown;"">""John""</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns string<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: red;"">3.14</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns number<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">NaN</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns number<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">false</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: green;"">// Returns boolean<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;[<span style=""color: red;"">1</span>,&nbsp;<span style=""color: red;"">2</span>,&nbsp;<span style=""color: red;"">3</span>,&nbsp;<span style=""color: red;"">4</span>]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;{name:<span style=""color: brown;"">'John'</span>, age:<span style=""color: red;"">34</span>}&nbsp;<span style=""color: red;"">&nbsp;</span><span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">new</span>&nbsp;Date()&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns object<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">function</span>&nbsp;() {} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns function<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;myCar&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns undefined (if myCar is not declared)<br></span><span style=""color: mediumblue;"">typeof</span>&nbsp;<span style=""color: mediumblue;"">null</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: red;""></span><span style=""color: green;"">// Returns object</span></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator: </b>delete</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator: </b>delete</div>         <div id=""back""><b>Operator</b> that deletes a property from an object.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;person = {<br><span style=""color: red;""></span>&nbsp;&nbsp;firstName:<span style=""color: brown;"">""John""</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;lastName:<span style=""color: brown;"">""Doe""</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;age:<span style=""color: red;"">50</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;eyeColor:<span style=""color: brown;"">""blue""</span><br><span style=""color: red;""></span>};<br><span style=""color: mediumblue;"">delete</span>&nbsp;person.age;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// or delete person[""age""];</span></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that deletes a property from an object.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that deletes a property from an object.</div>         <div id=""back""><b>Operator: </b>delete</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: mediumblue;"">const</span>&nbsp;person = {<br><span style=""color: red;""></span>&nbsp;&nbsp;firstName:<span style=""color: brown;"">""John""</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;lastName:<span style=""color: brown;"">""Doe""</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;age:<span style=""color: red;"">50</span>,<br><span style=""color: red;""></span>&nbsp;&nbsp;eyeColor:<span style=""color: brown;"">""blue""</span><br><span style=""color: red;""></span>};<br><span style=""color: mediumblue;"">delete</span>&nbsp;person.age;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// or delete person[""age""];</span></div>         <div id=""version"">ES6</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> instanceof</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> instanceof</div>         <div id=""back""><b>Operator</b> that returns true if the specified object is an instance of the specified object.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that returns true if the specified object is an instance of the specified object.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that returns true if the specified object is an instance of the specified object.</div>         <div id=""back""><b>Operator:</b> instanceof</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version"">ES1</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> in</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> in</div>         <div id=""back""><b>Operator </b>that returns true if the specified property is in the specified object, otherwise false.</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// Arrays<br></span><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""BMW""</span>];<br><span style=""color: brown;"">""Saab""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns false (specify the index number instead of value)<br></span><span style=""color: red;"">0</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: red;"">1</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: red;"">4</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns false (does not exist)<br></span><span style=""color: brown;"">""length""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true&nbsp; (length is an Array property)<br></span><br><span style=""color: green;"">// Objects<br></span><span style=""color: mediumblue;"">const</span>&nbsp;person = {firstName:<span style=""color: brown;"">""John""</span>, lastName:<span style=""color: brown;"">""Doe""</span>, age:<span style=""color: red;"">50</span>};<br><span style=""color: brown;"">""firstName""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""age""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><br><span style=""color: green;"">// Predefined objects<br></span><span style=""color: brown;"">""PI""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;Math&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""NaN""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""length""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true</span></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator </b>that returns true if the specified property is in the specified object, otherwise false.</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator </b>that returns true if the specified property is in the specified object, otherwise false.</div>         <div id=""back""><b>Operator:</b> in</div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""><span style=""color: green;"">// Arrays<br></span><span style=""color: mediumblue;"">const</span>&nbsp;cars = [<span style=""color: brown;"">""Saab""</span>,&nbsp;<span style=""color: brown;"">""Volvo""</span>,&nbsp;<span style=""color: brown;"">""BMW""</span>];<br><span style=""color: brown;"">""Saab""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns false (specify the index number instead of value)<br></span><span style=""color: red;"">0</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: red;"">1</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: red;"">4</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns false (does not exist)<br></span><span style=""color: brown;"">""length""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;cars&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true&nbsp; (length is an Array property)<br></span><br><span style=""color: green;"">// Objects<br></span><span style=""color: mediumblue;"">const</span>&nbsp;person = {firstName:<span style=""color: brown;"">""John""</span>, lastName:<span style=""color: brown;"">""Doe""</span>, age:<span style=""color: red;"">50</span>};<br><span style=""color: brown;"">""firstName""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""age""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;person&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><br><span style=""color: green;"">// Predefined objects<br></span><span style=""color: brown;"">""PI""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;Math&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""NaN""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;Number&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true<br></span><span style=""color: brown;"">""length""</span>&nbsp;<span style=""color: mediumblue;"">in</span>&nbsp;String&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=""color: green;"">// Returns true</span></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> void</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator:</b> void</div>         <div id=""back""><b>Operator</b> that evaluates an expression and returns undefined.&nbsp;</div>         <div id=""additional-info"">This operator is often used to obtain the undefined primitive value, using ""void(0)"" (useful when evaluating an expression without using the return value).</div>         <div id=""options""></div>         <div id=""example"">void function test() {<br>&nbsp; console.log('boo!');<br>&nbsp; // expected output: ""boo!""<br>}();<br><br>try {<br>&nbsp; test();<br>} catch (e) {<br>&nbsp; console.log(e);<br>&nbsp; // expected output: ReferenceError: test is not defined<br>}</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that evaluates an expression and returns undefined.&nbsp;</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Language Structure::Operators</div>         <div id=""front""><b>Operator</b> that evaluates an expression and returns undefined.&nbsp;</div>         <div id=""back""><b>Operator:</b> void</div>         <div id=""additional-info"">This operator is often used to obtain the undefined primitive value, using ""void(0)"" (useful when evaluating an expression without using the return value).</div>         <div id=""options""></div>         <div id=""example"">void function test() {<br>&nbsp; console.log('boo!');<br>&nbsp; // expected output: ""boo!""<br>}();<br><br>try {<br>&nbsp; test();<br>} catch (e) {<br>&nbsp; console.log(e);<br>&nbsp; // expected output: ReferenceError: test is not defined<br>}</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b> decodeURI()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b> decodeURI()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;decodeURIComponent()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;decodeURIComponent()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;encodeURI()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;encodeURI()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;encodeURIComponent()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;encodeURIComponent()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;escape()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;escape()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;eval()</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript::Syntax::Built-in Objects::Global</div>         <div id=""front""><b>Global Method:</b>&nbsp;eval()</div>         <div id=""back""></div>         <div id=""additional-info""></div>         <div id=""options""></div>         <div id=""example""></div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;array&lt;/i&gt;.concat(&lt;i&gt;array&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;array&lt;/i&gt;.concat(&lt;i&gt;array&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;b&gt;Array method&lt;/b&gt;&amp;nbsp;that joins two or more arrays. It returns a new array, containing the joined arrays.&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;b&gt;Array method&lt;/b&gt;&amp;nbsp;that joins two or more arrays. It returns a new array, containing the joined arrays.&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;array&lt;/i&gt;.copyWithin(&lt;i&gt;target&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;array&lt;/i&gt;.copyWithin(&lt;i&gt;target&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Array method&lt;/b&gt; that copies array elements within the array, to and from specified positions.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Array&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Array method&lt;/b&gt; that copies array elements within the array, to and from specified positions.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;boolean&lt;/i&gt;.toString()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;boolean&lt;/i&gt;.toString()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;boolean&lt;/i&gt;.valueOf()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;boolean&lt;/i&gt;.valueOf()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean method &lt;/b&gt;that converts a boolean value to a string, and returns the result.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean method &lt;/b&gt;that converts a boolean value to a string, and returns the result.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean method &lt;/b&gt;that returns the primitive value of a boolean.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean method &lt;/b&gt;that returns the primitive value of a boolean.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;Boolean.prototype&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;Boolean.prototype&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean property&amp;nbsp;&lt;/b&gt;that allows you to add new properties and methods to booleans.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Boolean property&amp;nbsp;&lt;/b&gt;that allows you to add new properties and methods to booleans.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;                 Do booleans capitilize there first letter in JavaScript.         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Boolean&lt;/div&gt;         &lt;div id=""front""&gt;                 Do booleans capitilize there first letter in JavaScript.         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;JSON.stringify(&lt;em&gt;obj&lt;/em&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;JSON.stringify(&lt;em&gt;obj&lt;/em&gt;)&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;JSON method &lt;/b&gt;that converts JavaScript objects into strings.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;JSON method &lt;/b&gt;that converts JavaScript objects into strings.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What JSON data types are allowed? (6 total)         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What JSON data types are allowed? (6 total)         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What JSON data types are &lt;b&gt;not&lt;/b&gt; allowed? (3 total)         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What JSON data types are &lt;b&gt;not&lt;/b&gt; allowed? (3 total)         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What is JSON?         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::JSON&lt;/div&gt;         &lt;div id=""front""&gt;                 What is JSON?         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;                 How many number types does JavaScript have?         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;                 How many number types does JavaScript have?         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.isInteger(&lt;i&gt;value&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.isInteger(&lt;i&gt;value&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that checks whether a value is an integer.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that checks whether a value is an integer.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.isSafeInteger(&lt;i&gt;value&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.isSafeInteger(&lt;i&gt;value&lt;/i&gt;)&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that checks whether a value is a safe integer.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that checks whether a value is a safe integer.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;number&lt;/i&gt;.toExponental()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;number&lt;/i&gt;.toExponental()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that converts a number into an exponential notation.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that converts a number into an exponential notation.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;number&lt;/i&gt;.toFixed()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;i&gt;number&lt;/i&gt;.toFixed()&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&amp;nbsp;&lt;/b&gt;that formats a number with x numbers of digits after the decimal point.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&amp;nbsp;&lt;/b&gt;that formats a number with x numbers of digits after the decimal point.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;number&lt;/i&gt;.toString()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;number&lt;/i&gt;.toString()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that returns the number as a string.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that returns the number as a string.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;number&lt;/i&gt;.valueOf()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;number&lt;/i&gt;.valueOf()&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&amp;nbsp;&lt;/b&gt;that returns the primitive value of a number.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&amp;nbsp;&lt;/b&gt;that returns the primitive value of a number.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.constructor&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.constructor&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number property&lt;/b&gt; that returns the function that created JavaScript's Number prototype.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number property&lt;/b&gt; that returns the function that created JavaScript's Number prototype.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;Number.NEGATIVE_INFINITY&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;div&gt;Number.NEGATIVE_INFINITY&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number property&lt;/b&gt; that returns negative infinity.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number property&lt;/b&gt; that returns negative infinity.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.NaN&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.NaN&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that returns NaN.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method &lt;/b&gt;that returns NaN.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.POSITIVE_INFINITY&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.POSITIVE_INFINITY&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that returns positive infinity.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;b&gt;Number method&lt;/b&gt; that returns positive infinity.&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.prototype&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;Number.prototype&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;b&gt;Number property&lt;/b&gt; that allows you to add new properties and methods to numbers. &lt;br&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Built-in Objects::Number&lt;/div&gt;         &lt;div id=""front""&gt;&lt;div&gt;&lt;b&gt;Number property&lt;/b&gt; that allows you to add new properties and methods to numbers. &lt;br&gt;&lt;/div&gt;&lt;/div&gt; &lt;/div&gt; &lt;script&gt;         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[0] + "" - "" + dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Built-in Objects</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 Fill out the following code to complete the ternary operation:&lt;br&gt;&lt;br&gt;&lt;i&gt;conditionToEvaluate&lt;/i&gt; &lt;span class=cloze&gt;[...]&lt;/span&gt; &lt;i&gt;ifTrueValue&lt;/i&gt; &lt;span class=cloze&gt;[...]&lt;/span&gt; &lt;i&gt;ifFalseValue&lt;/i&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 Fill out the following code to complete the ternary operation:&lt;br&gt;&lt;br&gt;&lt;i&gt;conditionToEvaluate&lt;/i&gt; &lt;span class=cloze&gt;[...]&lt;/span&gt; &lt;i&gt;ifTrueValue&lt;/i&gt; &lt;span class=cloze&gt;[...]&lt;/span&gt; &lt;i&gt;ifFalseValue&lt;/i&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Language Structure</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 Fill out the following code to complete the ternary operation:&lt;br&gt;&lt;br&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt; ? &lt;span class=cloze&gt;[...]&lt;/span&gt; : &lt;span class=cloze&gt;[...]&lt;/span&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 Fill out the following code to complete the ternary operation:&lt;br&gt;&lt;br&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt; ? &lt;span class=cloze&gt;[...]&lt;/span&gt; : &lt;span class=cloze&gt;[...]&lt;/span&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Language Structure</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 String Operators&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt;: +&lt;/li&gt;&lt;li&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt;: +=&lt;/li&gt;&lt;/ul&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 String Operators&lt;br&gt;&lt;ul&gt;&lt;li&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt;: +&lt;/li&gt;&lt;li&gt;&lt;span class=cloze&gt;[...]&lt;/span&gt;: +=&lt;/li&gt;&lt;/ul&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Language Structure</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 String Operators&lt;br&gt;&lt;ul&gt;&lt;li&gt;Addition: &lt;span class=cloze&gt;[...]&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Add to value: &lt;span class=cloze&gt;[...]&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); </script>"	"<div id=""items"">         <div id=""path""></div>         <div id=""deck"">JavaScript</div>         <div id=""front"">&lt;div id=""items""&gt;         &lt;div id=""path""&gt;&lt;/div&gt;         &lt;div id=""deck""&gt;JavaScript::Syntax::Language Structure::Operators&lt;/div&gt;         &lt;div id=""front""&gt;                 String Operators&lt;br&gt;&lt;ul&gt;&lt;li&gt;Addition: &lt;span class=cloze&gt;[...]&lt;/span&gt;&lt;/li&gt;&lt;li&gt;Add to value: &lt;span class=cloze&gt;[...]&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;         &lt;/div&gt; &lt;/div&gt; &lt;script&gt;                 deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" &gt; "");         function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. ""); &lt;/script&gt;        ""&lt;div id=""""items""""&gt;         &lt;div id=""""path""""&gt;&lt;/div&gt;         &lt;div id=""""deck""""&gt;JavaScript</div>         <div id=""back""></div>         <div id=""additional-info"">Syntax</div>         <div id=""options""></div>         <div id=""example"">Language Structure</div>         <div id=""version""></div> </div> <script>         deck = document.getElementById(""deck"");         dName = deck.innerText.split(""::"")         deck.innerHTML = dName[dName.length-1];         document.getElementById(""path"").innerHTML = dName.join("" > "");         version = document.getElementById(""version"");         version.innerHTML = version.innerHTML || ""ES6""; [...document.getElementById(""items"").children].map((el)=> el.innerText ? null : el.classList.add(""hidden""));                  function addTitle(id=false, title="""") {                 let el = document.getElementById(id);                 if (el.innerText) {                         let t = document.createElement(""div"");                         t.classList.add(""title"");                         t.innerHTML = title;                          let b = document.createElement(""div"");                         b.classList.add(""body"");                         b.innerHTML = el.innerHTML;                          while(el.firstChild) {                                 el.removeChild(el.firstChild);                         }                         el.append(t, b);                 }          }         addTitle(""front"", ""Q. "");         addTitle(""back"", ""A. "");         addTitle(""options"", ""Optional Arguments: "");         addTitle(""example"", ""Example: "");         addTitle(""additional-info"", ""&#9432;"");         addTitle(""version"", ""Version: ""); </script>"
